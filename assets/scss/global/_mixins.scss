@mixin res($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: 576px) {
      //576px and up
      @content;
    }
  }

  @if $breakpoint == md {
    @media (min-width: 768px) {
      //768px and up
      @content;
    }
  }

  @if $breakpoint == lg {
    @media (min-width: 992px) {
      //992px and up
      @content;
    }
  }

  @if $breakpoint == xl {
    @media (min-width: 1200px) {
      //1200px and up
      @content;
    }
  }


  @if $breakpoint == xxl {
    @media (min-width: 1400px) {
      //1200px and up
      @content;
    }
  }
}

@mixin ser($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: 575px) {
      //576px and up
      @content;
    }
  }

  @if $breakpoint == md {
    @media (max-width: 767px) {
      //768px and up
      @content;
    }
  }

  @if $breakpoint == lg {
    @media (max-width: 991px) {
      //992px and up
      @content;
    }
  }

  @if $breakpoint == xl {
    @media (max-width: 1199px) {
      //1200px and up
      @content;
    }
  }

  @if $breakpoint == xxl {
    @media (max-width: 1399px) {
      //1200px and up
      @content;
    }
  }
}

@mixin center-pos($position: absolute) {
  position: $position;
  right: 50%;
  top: 50%;
  transform: translate(50%, -50%);
}

@mixin str-pos($position: absolute) {
  position: $position;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
  object-position: center;
}

@mixin unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin tt($overflow: ellipsis) {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: $overflow;
}

@mixin ratio($first, $second) {
  position: relative;
  padding-top: ($second / $first * 100%);
}

@mixin btn-make-square($size) {
  width: $size;
  min-width: unset;
  padding: 0;
  height: $size;
}

@mixin btn-make-circle($size) {
  width: $size;
  min-width: unset;
  padding: 0;
  height: $size;
  border-radius: 50%;
}

@mixin vh() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

$escaped-characters: (
                ("<", "%3c"),
                (">", "%3e"),
                ("#", "%23"),
                ("(", "%28"),
                (")", "%29"),
) !default;

@function escape-svg($string) {
  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if str-index($string, "url(") == 1 {
        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

@mixin raw-list() {
  list-style: none;

  ul, ol {
    margin-left: 0;
    list-style: inherit;
  }
}