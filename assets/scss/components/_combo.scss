// To add a style or size go to input.scss

.cm_combo {
  select, input {
    //@include vh;
  }

  &__input {
    position: relative;
    @extend %input-style;
    @include unselectable;
    padding-#{$end} : 44px;
    cursor: pointer;

    &::after, &::before {
      content: "";
      position: absolute;
      top: 40%;
      transform: translateY(-50%);
      transform-origin: right center;
      #{$end}: 20px;
      width: 10px;
      height: 2px;
      border-radius: 2px;
      background-color: $cl-gray-8;
      transition: .3s $tr-timing;
    }

    &::before {
      transform: translateY(-50%) rotate(45deg);
      top: 60%;
    }

    &::after {
      transform: translateY(-50%) rotate(135deg);
      top: 60%;

    }

    &:focus {
      &::before {
        transform: translateY(-50%) rotate(-45deg);
        top: 40%;
      }

      &::after {
        transform: translateY(-50%) rotate(225deg);
        top: 40%;
      }
    }
  }

  &__text {
    display: inline-flex;
    align-items: center;
    gap: 24px;
  }

  &__dropdown {
    //display: none;
    position: absolute;
    right: 0;
    left: 0;
    top: 100%;
    transform: translateY(8px);
    background-color: $cl-bg;
    box-shadow: 0 20px 40px -20px rgba(black, 0.5);
    max-height: 400px;
    overflow-y: auto;
    z-index: 5;
    border-radius: inherit;

    &__item {
      //padding: .4rem .6rem;
      padding: (($height-input - $font-size-body) / 2);

      display: flex;
      line-height: 1;
      align-items: center;
      gap: 24px;
      width: 100%;

      &:not(:last-child) {
        border-bottom: 1px solid $cl-gray-1;
      }

      &:hover {
        background-color: $cl-gray-0;
      }
    }
  }
}

@each $class, $style in $input-styles {
  .cm_combo__input.#{$class} {
    border: map-get($style, 'border');
    background: map-get($style, 'background');
    color: map-get($style, 'color');
    box-shadow: map-get($style, 'shadow');
    border-radius: map-get($style, 'radius');

    &::placeholder {
      color: map-get($style, 'placeholder');
    }

    &:hover {
      background: map-get($style, 'hover-background');
      border: map-get($style, 'hover-border');
      box-shadow: map-get($style, 'hover-shadow');
    }

    &:focus {
      background: map-get($style, 'background');
      border: map-get($style, 'border');
      box-shadow: map-get($style, 'focus-shadow');
    }
  }
}

@each $class, $height in $input-sizes {
  .cm_combo__input.#{$class} {
    min-height: $height;
    padding: 0 ($height * .4);
  }
}